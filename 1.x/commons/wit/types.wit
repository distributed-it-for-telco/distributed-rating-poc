package orange:commons;

interface types {
    record balance{
        count: f32,
        unit: string,
        party-id: string,
    }

    record usage-proof-request {
        party-id: string,
        usage-id: string,
        usage-characteristic-list: list<usage-characteristic>,
        rating: string, 
        usage-date: string,
        offer-id: string,
        description: string,
        usage-type: string,
        product-name: string,
    }
    record rating-request {
        customer-id: string,
        agent-id: string,
        language: string,
        offer-id: string,
        usage: usage,
        rating-history: list<rating-record>
    }

    record rating-response {
        authorization-status: authorization-status,
        billing-information: billing-information,
        next-agent: agent-identification
    }

    record validation-request {
        rating-request: rating-request,
        client-ip: string,
        client-country: string
    }

    record validation-response {
        valid: bool
    }

    record get-children-request {
        usage: usage,
        atomic-offer-id: string
    }

    record agent-list {
        agents: list<agent>
    }

    record agent {
        identification: agent-identification,
        usage: usage
    }

    record agent-identification {
        name: string,
        partner-id: string
    }

    record usage {
        usage-characteristic-list: list<usage-characteristic>
    }

    record usage-characteristic {
        name: string,
        value: string,
        value-type: string
    }

    record rating-record {
        producer: string,
        unit: string,
        price: string
    }

    record billing-information {
        price: string,
        unit: string,
        messages: list<string>
    }

    record authorization-status {
        code: u16,
        key: string
    }
}